using Abp.Web.Api.SwaggerTool.Config;
using Swashbuckle.Swagger;
using System.Linq;
using System.Text.RegularExpressions;
using System.Web.Http.Description;

namespace Abp.Web.Api.SwaggerTool.Filter
{
    public class HideDocsFilter : IDocumentFilter
    {
        private string AbpPath = "AbpCache|AbpServiceProxies|app/session|app/tenant|app/user|ServiceProxies|TypeScript";
        public void Apply(SwaggerDocument swaggerDoc, SchemaRegistry schemaRegistry, IApiExplorer apiExplorer)
        {
            var setting = Its.Configuration.Settings.Get<SwaggerToolSettings>();
            foreach (var apiDescription in apiExplorer.ApiDescriptions)
            {
                //hide attr
                
                //remove from docs autogenerated services
                if (setting.HideAbpAutogeneratedApi)
                {
                    Regex r = new Regex(AbpPath);
                    if (r.IsMatch(apiDescription.ID))
                    {
                        swaggerDoc.paths.Remove("/" + apiDescription.RelativePath.Split('?')[0]);
                        continue;
                    }
                    
                }
                if (setting.HideDocPaths!=null&&setting.HideDocPaths.Length>0)
                {
                    if (setting.HideDocPaths.Where(p=>apiDescription.ID.Contains(p)).Count()>0)
                    {
                        swaggerDoc.paths.Remove("/" + apiDescription.RelativePath.Split('?')[0]);
                        continue;
                    }
                }
                if (!string.IsNullOrEmpty(setting.HideDocPathAttributeName))
                {
                    var attr = apiDescription.GetControllerAndActionAttributes<object>();
                    if (attr!=null&& attr.Where(p=>p.ToString()==setting.HideDocPathAttributeName).Count()>0)
                    {
                        swaggerDoc.paths.Remove("/" + apiDescription.RelativePath.Split('?')[0]);
                        continue;
                    }
                }
               

            }
        }
    }
}
